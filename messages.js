// [ MENSAGENS DO BOT ]
// Arquivo centralizado com todos os conte√∫dos de mensagens

const DEPLOY_STAGES = {
    STARTING: (scriptName) => `\`\`\`ansi
\u001b[32m‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ üöÄ INICIANDO DEPLOY: ${scriptName.padEnd(15)} ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\u001b[0m

\u001b[33m[ETAPA 1/5]\u001b[0m Verificando permiss√µes do script...
\`\`\``,

    PERMISSIONS_OK: (scriptName) => `\`\`\`ansi
\u001b[32m‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ üöÄ EXECUTANDO: ${scriptName.padEnd(19)} ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\u001b[0m

\u001b[32m‚úì [ETAPA 1/5]\u001b[0m Permiss√µes verificadas
\u001b[33m[ETAPA 2/5]\u001b[0m Baixando c√≥digo do GitHub...
\`\`\``,

    GITHUB_DOWNLOADED: (scriptName) => `\`\`\`ansi
\u001b[32m‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ üöÄ EXECUTANDO: ${scriptName.padEnd(19)} ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\u001b[0m

\u001b[32m‚úì [ETAPA 1/5]\u001b[0m Permiss√µes verificadas
\u001b[32m‚úì [ETAPA 2/5]\u001b[0m C√≥digo baixado do GitHub
\u001b[33m[ETAPA 3/5]\u001b[0m Executando deploy do script...
\`\`\``,

    EXECUTING: (scriptName, stdout) => `\`\`\`ansi
\u001b[32m‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ üöÄ EXECUTANDO: ${scriptName.padEnd(19)} ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\u001b[0m

\u001b[32m‚úì [ETAPA 1/5]\u001b[0m Permiss√µes verificadas
\u001b[32m‚úì [ETAPA 2/5]\u001b[0m C√≥digo baixado do GitHub
\u001b[33m[ETAPA 3/5]\u001b[0m Deploy executado... üì°
\u001b[33m[ETAPA 4/5]\u001b[0m Build gerado & sa√≠da processada...

\u001b[36m‚îÄ‚îÄ SA√çDA ATUAL ‚îÄ‚îÄ\u001b[0m
${stdout.split('\n').slice(-8).join('\n').substring(0, 800)}
${stdout.length > 800 ? '\n... (processando)' : ''}
\`\`\``,

    FINALIZING: (scriptName) => `\`\`\`ansi
\u001b[32m‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ üöÄ FINALIZANDO: ${scriptName.padEnd(17)} ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\u001b[0m

\u001b[32m‚úì [ETAPA 1/5]\u001b[0m Permiss√µes verificadas
\u001b[32m‚úì [ETAPA 2/5]\u001b[0m C√≥digo baixado do GitHub
\u001b[32m‚úì [ETAPA 3/5]\u001b[0m Deploy executado
\u001b[32m‚úì [ETAPA 4/5]\u001b[0m Build gerado com sucesso & sa√≠da processada
\u001b[33m[ETAPA 5/5]\u001b[0m Gerando log e finalizando...
\`\`\``,

    SUCCESS: (scriptName) => `\`\`\`ansi
\u001b[32m‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ ‚úÖ DEPLOY CONCLU√çDO: ${scriptName.padEnd(14)} ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\u001b[0m

\u001b[32m‚úì [ETAPA 1/5]\u001b[0m Permiss√µes verificadas
\u001b[32m‚úì [ETAPA 2/5]\u001b[0m C√≥digo baixado do GitHub
\u001b[32m‚úì [ETAPA 3/5]\u001b[0m Deploy executado
\u001b[32m‚úì [ETAPA 4/5]\u001b[0m Build gerado com sucesso & sa√≠da processada
\u001b[32m‚úì [ETAPA 5/5]\u001b[0m Log gerado e anexado

\u001b[33müöÄ Deploy finalizado com sucesso!\u001b[0m
\u001b[36müìé Log completo anexado abaixo\u001b[0m
\`\`\``,

    ERROR: (scriptName, errorMessage) => `\`\`\`ansi
\u001b[31m‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ ‚ùå ERRO NO DEPLOY: ${scriptName.padEnd(16)} ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\u001b[0m

\u001b[31m‚úó Deploy falhou durante a execu√ß√£o\u001b[0m

\u001b[31mErro: ${errorMessage || 'Erro desconhecido'}\u001b[0m
\u001b[36müìé Log de erro anexado abaixo\u001b[0m
\`\`\``
};

const ERROR_MESSAGES = {
    WRONG_PASSWORD: '‚ùå Senha incorreta.',
    NO_PERMISSION: '‚ùå Voc√™ n√£o tem permiss√£o para executar este comando.',
    SCRIPT_NOT_FOUND: '‚ùå Script n√£o encontrado.',
    SCRIPT_EXISTS: (scriptName) => `‚ùå Script \`${scriptName}\` j√° existe. Use um nome diferente.`,
    INVALID_SCRIPT_NAME: '‚ùå O nome do script deve terminar com `.sh`',
    SAVE_ERROR: '‚ùå Erro ao salvar o script. Verifique as permiss√µes do arquivo.',
    CLEAR_MESSAGES_ERROR: '‚ùå Erro ao limpar mensagens. Verifique se as mensagens n√£o s√£o muito antigas (14+ dias) ou se o bot tem permiss√µes adequadas.'
};

const SUCCESS_MESSAGES = {
    SCRIPT_ADDED: (scriptName, scriptPath) => `‚úÖ Script \`${scriptName}\` adicionado com sucesso!\nüìç Caminho: \`${scriptPath}\`\n\n‚ö†Ô∏è Os comandos ser√£o atualizados em alguns segundos.`,
    MESSAGES_CLEARED: (count) => `üßπ **${count}** mensagens foram deletadas com sucesso!`,
    USE_SLASH_COMMAND: '‚ÑπÔ∏è Use o comando slash `/executar-script` para uma melhor experi√™ncia!'
};

const EMBEDS = {
    SCRIPTS_LIST: (scripts) => ({
        title: 'üìã Scripts Dispon√≠veis',
        description: Object.entries(scripts)
            .map(([name, path]) => `‚Ä¢ **${name}**: \`${path}\``)
            .join('\n') || 'Nenhum script encontrado.',
        color: 0x00ff00,
        footer: {
            text: `Total: ${Object.keys(scripts).length} scripts`
        }
    })
};

const LOG_CONTENT = {
    TEMPLATE: (timestamp, scriptName, status, output, stderr) => `
=== DEPLOY LOG ===
Data: ${timestamp}
Script: ${scriptName}
Status: ${status}

${status === 'ERRO' ? '=== ERRO ===' : '=== SA√çDA ==='}
${output}

${stderr ? `=== AVISOS/ERROS ===\n${stderr}` : ''}

========================================
`
};

module.exports = {
    DEPLOY_STAGES,
    ERROR_MESSAGES,
    SUCCESS_MESSAGES,
    EMBEDS,
    LOG_CONTENT
};